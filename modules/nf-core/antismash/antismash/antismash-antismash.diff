Changes in component 'nf-core/antismash/antismash'
'modules/nf-core/antismash/antismash/environment.yml' is unchanged
'modules/nf-core/antismash/antismash/meta.yml' is unchanged
Changes in 'antismash/antismash/main.nf':
--- modules/nf-core/antismash/antismash/main.nf
+++ modules/nf-core/antismash/antismash/main.nf
@@ -6,14 +6,14 @@
     container "nf-core/antismash:8.0.1--pyhdfd78af_0"
 
     input:
-    tuple val(meta), path(sequence_input)
+    tuple val(meta), path(sequence_input), path(gff)
     path databases
-    path gff
+    val database_version
 
     output:
     tuple val(meta), path("${prefix}/{css,images,js}")                    , emit: html_accessory_files
-    tuple val(meta), path("${prefix}/*.gbk")                              , emit: gbk_input
-    tuple val(meta), path("${prefix}/*.json")                             , emit: json_results
+    tuple val(meta), path("${prefix}/${prefix}.gbk")                              , emit: gbk_input
+    tuple val(meta), path("${prefix}/${prefix}.json")                     , emit: json_results
     tuple val(meta), path("${prefix}/*.log")                              , emit: log
     tuple val(meta), path("${prefix}/*.zip")                              , emit: zip
     tuple val(meta), path("${prefix}/index.html")                         , emit: html
@@ -24,7 +24,6 @@
     tuple val(meta), path("${prefix}/knownclusterblast/*_c*.txt")         , emit: knownclusterblast_txt      , optional: true
     tuple val(meta), path("${prefix}/svg/clusterblast*.svg")              , emit: svg_files_clusterblast     , optional: true
     tuple val(meta), path("${prefix}/svg/knownclusterblast*.svg")         , emit: svg_files_knownclusterblast, optional: true
-    tuple val(meta), path("${prefix}/*region*.gbk")                       , emit: gbk_results                , optional: true
     tuple val(meta), path("${prefix}/clusterblastoutput.txt")             , emit: clusterblastoutput         , optional: true
     tuple val(meta), path("${prefix}/knownclusterblastoutput.txt")        , emit: knownclusterblastoutput    , optional: true
     path "versions.yml"                                                   , emit: versions
@@ -34,12 +33,32 @@
 
     script:
     def args = task.ext.args   ?: ''
-    prefix   = task.ext.prefix ?: "${meta.id}"
+    prefix   = task.ext.suffix ?: "${meta.id}"
     gff_flag = gff ? "--genefinding-gff3 ${gff}" : ""
 
+    // Handle a compressed fasta file
+    def is_seq_compressed = sequence_input.getExtension() == "gz" ? true : false
+    def sequence_file = is_seq_compressed ? sequence_input.getBaseName() : sequence_input
+    // Handle a compressed gff file
+    def is_gff_compressed = gff.getExtension() == "gz" ? true : false
+    def gff_file = is_gff_compressed ? gff.getBaseName() : gff
+
+    gff_flag = gff ? "--genefinding-gff3 ${gff_file}" : ""
     """
     ## We specifically do not include on-the-fly annotations (--genefinding-tool none) as
     ## this should be run as a separate module for versioning purposes
+
+    if [ "${is_seq_compressed}" == "true" ]; then
+        # - remove in case of retry - #
+        rm -f ${sequence_file}
+        gzip -c -d ${sequence_input} > ${sequence_file}
+    fi
+
+    if [ "${is_gff_compressed}" == "true" ]; then
+        # - remove in case of retry - #
+        rm -f ${gff_file}
+        gunzip -c -d ${gff} > ${gff_file}
+    fi
 
     antismash \\
         ${args} \\
@@ -50,11 +69,12 @@
         --genefinding-tool none \\
         --logfile ${prefix}/${prefix}.log \\
         --databases ${databases} \\
-        ${sequence_input}
+        ${sequence_file}
 
     cat <<-END_VERSIONS > versions.yml
     "${task.process}":
         antismash: \$(echo \$(antismash --version) | sed 's/antiSMASH //;s/-.*//g')
+        antismash database: $database_version
     END_VERSIONS
     """
 

'modules/nf-core/antismash/antismash/tests/main.nf.test.snap' is unchanged
'modules/nf-core/antismash/antismash/tests/nextflow.config' is unchanged
'modules/nf-core/antismash/antismash/tests/main.nf.test' is unchanged
************************************************************
