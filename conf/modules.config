/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
    ]

    withName: MULTIQC {
        ext.args   = { params.multiqc_title ? "--title \"${params.multiqc_title}\"" : '' }
        publishDir = [
            path: { "${params.outdir}/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        ]
    }

    /* Most of the pipeline only analyzes contigs >= this threshold, but BGC uses a threshold size. */
    withName: SEQKIT_SEQ_QC {
        ext.args = "--min-len ${params.min_contig_length}"
    }

    withName: SEQKIT_SEQ_BGC {
        ext.args = "--min-len ${params.bgc_min_contig_length}"
    }

    withName: SEQKIT_SPLIT2 {
        // We are tweaking the prefix to prevent names like <assembly_id>.part_001.gz to be used
        // in favour of <assembly_id>_part_001.gz which is more file name parsing friendly
        // which helps when concatenating chunked post-processed fasta files, such as the results of interposcan
        ext.args = { "--by-length-prefix ${meta.id}_" }
    }

    withName: PYRODIGAL {
        ext.args = "-p meta"
    }

    withName: EGGNOGMAPPER_ORTHOLOGS {
        cpus   = 16
        memory = 50.GB
        publishDir = [
            path: { "${params.outdir}/eggnog_orthologs" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        ]
    }

    withName: EGGNOGMAPPER_ANNOTATIONS {
        cpus   = 16
        memory = 50.GB
        publishDir = [
            path: { "${params.outdir}/eggnog_annotations" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        ]
    }


    withName: DBCAN {
        cpus   = 8
        memory = 10.GB
    }

    withName: INTERPROSCAN {
        cpus   = 16
        memory = { 12.GB * task.attempt }
        ext.args =
            "--iprlookup " +
            "--goterms " +
            "--applications " + [
                "TIGRFAM",
                "SFLD",
                "SUPERFAMILY",
                "Gene3D",
                "Hamap",
                "Coils",
                "SMART",
                "CDD",
                "PRINTS",
                "PIRSF",
                "ProSiteProfiles",
                "ProSitePatterns",
                "PfamA",
                "MobiDBLite",
                // "SignalP_GRAM_POSITIVE", TODO: get a license
                // "SignalP_GRAM_NEGATIVE",
                // "SignalP_EUK",
                // "Phobius", TODO: get a license
                // "TMHMM", TODO: get a license
            ].join(",")
    }

    /*
     * InterPro TSV concatenation
     */
    withName: CONCATENATE_INTERPROSCAN_TSV {
        ext.prefix = { "${meta.id}_concatenated.tsv" }
    }

    withName: GENOMEPROPERTIES {
        ext.args = '-all -outfiles table -outfiles web_json -outfiles summary'
    }

    withName: DIAMOND_BLASTP {
       ext.args = "--top 11"
    }

    withName: OWLTOOLS {
        ext.args = '--map2slim'
    }
}
